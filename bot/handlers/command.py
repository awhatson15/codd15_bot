from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from aiogram.filters import Command
import logging
from datetime import datetime

from bot.keyboards.keyboards import get_main_menu
from bot.utils.message_utils import safe_edit_message
from bot.services.analytics import QueueAnalytics
from bot.services.parser import CoddParser
from bot.models.database import get_user_car
from bot.handlers.chat import cmd_chat

# –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä —Å–µ—Ä–≤–∏—Å–∞ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏
analytics = QueueAnalytics()


async def cmd_help(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help."""
    await message.answer(
        "üîé <b>–°–ø—Ä–∞–≤–∫–∞ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –±–æ—Ç–∞</b>\n\n"
        "<b>–¶–û–î–î –≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –æ—á–µ—Ä–µ–¥—å</b> - –±–æ—Ç –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –æ—á–µ—Ä–µ–¥–∏ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –¶–û–î–î.\n\n"
        "<b>–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b>\n"
        "/start - –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞ –∏ –≤–≤–µ—Å—Ç–∏/–∏–∑–º–µ–Ω–∏—Ç—å –Ω–æ–º–µ—Ä –∞–≤—Ç–æ–º–æ–±–∏–ª—è\n"
        "/check - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ç–µ–∫—É—â—É—é –ø–æ–∑–∏—Ü–∏—é –≤ –æ—á–µ—Ä–µ–¥–∏\n"
        "/settings - –ù–∞—Å—Ç—Ä–æ–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è\n"
        "/help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É\n\n"
        "<b>–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π:</b>\n"
        "- –ò–Ω—Ç–µ—Ä–≤–∞–ª—å–Ω—ã–π —Ä–µ–∂–∏–º: –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —á–µ—Ä–µ–∑ –∑–∞–¥–∞–Ω–Ω—ã–π –∏–Ω—Ç–µ—Ä–≤–∞–ª –≤—Ä–µ–º–µ–Ω–∏\n"
        "- –ü—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –ø–æ–∑–∏—Ü–∏–∏: —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø—Ä–∏ –∫–∞–∂–¥–æ–º –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –ø–æ–∑–∏—Ü–∏–∏ –≤ –æ—á–µ—Ä–µ–¥–∏\n"
        "- –ü—Ä–∏ —Å–¥–≤–∏–≥–µ –æ—á–µ—Ä–µ–¥–∏: —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ, –∫–æ–≥–¥–∞ –æ—á–µ—Ä–µ–¥—å —Å–¥–≤–∏–Ω–µ—Ç—Å—è –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω–æ–µ —á–∏—Å–ª–æ –ø–æ–∑–∏—Ü–∏–π\n\n"
        "–í—ã –º–æ–∂–µ—Ç–µ –≤–∫–ª—é—á–∏—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–µ–∂–∏–º–æ–≤ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ.",
        reply_markup=get_main_menu()
    )


async def help_callback(callback: CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∏ '–°–ø—Ä–∞–≤–∫–∞'."""
    await callback.answer()
    
    await safe_edit_message(
        callback.message,
        "üîé <b>–°–ø—Ä–∞–≤–∫–∞ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –±–æ—Ç–∞</b>\n\n"
        "<b>–¶–û–î–î –≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –æ—á–µ—Ä–µ–¥—å</b> - –±–æ—Ç –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –æ—á–µ—Ä–µ–¥–∏ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –¶–û–î–î.\n\n"
        "<b>–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b>\n"
        "/start - –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞ –∏ –≤–≤–µ—Å—Ç–∏/–∏–∑–º–µ–Ω–∏—Ç—å –Ω–æ–º–µ—Ä –∞–≤—Ç–æ–º–æ–±–∏–ª—è\n"
        "/check - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ç–µ–∫—É—â—É—é –ø–æ–∑–∏—Ü–∏—é –≤ –æ—á–µ—Ä–µ–¥–∏\n"
        "/settings - –ù–∞—Å—Ç—Ä–æ–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è\n"
        "/help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É\n\n"
        "<b>–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π:</b>\n"
        "- –ò–Ω—Ç–µ—Ä–≤–∞–ª—å–Ω—ã–π —Ä–µ–∂–∏–º: –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —á–µ—Ä–µ–∑ –∑–∞–¥–∞–Ω–Ω—ã–π –∏–Ω—Ç–µ—Ä–≤–∞–ª –≤—Ä–µ–º–µ–Ω–∏\n"
        "- –ü—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –ø–æ–∑–∏—Ü–∏–∏: —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø—Ä–∏ –∫–∞–∂–¥–æ–º –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –ø–æ–∑–∏—Ü–∏–∏ –≤ –æ—á–µ—Ä–µ–¥–∏\n"
        "- –ü—Ä–∏ —Å–¥–≤–∏–≥–µ –æ—á–µ—Ä–µ–¥–∏: —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ, –∫–æ–≥–¥–∞ –æ—á–µ—Ä–µ–¥—å —Å–¥–≤–∏–Ω–µ—Ç—Å—è –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω–æ–µ —á–∏—Å–ª–æ –ø–æ–∑–∏—Ü–∏–π\n\n"
        "–í—ã –º–æ–∂–µ—Ç–µ –≤–∫–ª—é—á–∏—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–µ–∂–∏–º–æ–≤ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ.",
        reply_markup=get_main_menu()
    )


async def cmd_stats(message: Message):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –æ—á–µ—Ä–µ–¥–∏."""
    try:
        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è
        now = datetime.now()
        day_of_week = now.weekday()
        hour = now.hour
        
        # –ü–æ–ª—É—á–∞–µ–º —Å—Ä–µ–¥–Ω—é—é —Å–∫–æ—Ä–æ—Å—Ç—å
        avg_speed = await analytics.get_average_velocity(day_of_week, hour)
        
        days = ["–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫", "–í—Ç–æ—Ä–Ω–∏–∫", "–°—Ä–µ–¥–∞", "–ß–µ—Ç–≤–µ—Ä–≥", "–ü—è—Ç–Ω–∏—Ü–∞", "–°—É–±–±–æ—Ç–∞", "–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ"]
        day_name = days[day_of_week]
        
        await message.answer(
            f"üìä <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ—á–µ—Ä–µ–¥–∏</b>\n\n"
            f"–¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è: {hour}:00, {day_name}\n"
            f"–°—Ä–µ–¥–Ω—è—è —Å–∫–æ—Ä–æ—Å—Ç—å –¥–≤–∏–∂–µ–Ω–∏—è –æ—á–µ—Ä–µ–¥–∏: <b>{avg_speed:.2f}</b> –ø–æ–∑–∏—Ü–∏–π/—á–∞—Å\n\n"
            f"–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /forecast –¥–ª—è –ø—Ä–æ–≥–Ω–æ–∑–∞ –≤—Ä–µ–º–µ–Ω–∏ –æ–∂–∏–¥–∞–Ω–∏—è"
        )
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã stats: {e}")
        await message.answer("–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É.")


async def cmd_forecast(message: Message):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø—Ä–æ–≥–Ω–æ–∑ –≤—Ä–µ–º–µ–Ω–∏ –æ–∂–∏–¥–∞–Ω–∏—è."""
    try:
        # –ü–æ–ª—É—á–∞–µ–º –Ω–æ–º–µ—Ä –∞–≤—Ç–æ–º–æ–±–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –µ–≥–æ –ø–æ–∑–∏—Ü–∏—é
        user_id = message.from_user.id
        car_number = await get_user_car(user_id)
        
        if not car_number:
            await message.answer(
                "–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ–≥–Ω–æ–∑–∞ —Å–Ω–∞—á–∞–ª–∞ —É–∫–∞–∂–∏—Ç–µ –Ω–æ–º–µ—Ä –≤–∞—à–µ–≥–æ –∞–≤—Ç–æ–º–æ–±–∏–ª—è —á–µ—Ä–µ–∑ /start"
            )
            return
        
        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–∑–∏—Ü–∏–∏ –∞–≤—Ç–æ–º–æ–±–∏–ª—è
        parser = CoddParser()
        car_data = await parser.parse_car_data(car_number)
        
        if not car_data:
            await message.answer(
                f"–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∞–≤—Ç–æ–º–æ–±–∏–ª—å —Å –Ω–æ–º–µ—Ä–æ–º {car_number} –≤ –æ—á–µ—Ä–µ–¥–∏.\n"
                f"–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–æ–º–µ—Ä –∏–ª–∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
            )
            return
        
        position = car_data['queue_position']
        
        # –ü–æ–ª—É—á–∞–µ–º –ø—Ä–æ–≥–Ω–æ–∑
        forecast = await analytics.predict_waiting_time(position)
        
        # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –æ–∂–∏–¥–∞–µ–º–æ–µ –≤—Ä–µ–º—è
        expected_date = datetime.fromisoformat(forecast['expected_date'].replace('Z', '+00:00'))
        date_str = expected_date.strftime("%d.%m.%Y %H:%M")
        
        await message.answer(
            f"üîÆ <b>–ü—Ä–æ–≥–Ω–æ–∑ –≤—Ä–µ–º–µ–Ω–∏ –æ–∂–∏–¥–∞–Ω–∏—è</b>\n\n"
            f"–ê–≤—Ç–æ–º–æ–±–∏–ª—å: <code>{car_number}</code>\n"
            f"–¢–µ–∫—É—â–∞—è –ø–æ–∑–∏—Ü–∏—è: <b>{position}</b>\n\n"
            f"–ü—Ä–∏–º–µ—Ä–Ω–æ–µ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è: <b>{forecast['expected_hours']}</b> —á–∞—Å–æ–≤\n"
            f"–û–ø—Ç–∏–º–∏—Å—Ç–∏—á–Ω—ã–π –ø—Ä–æ–≥–Ω–æ–∑: {forecast['min_hours']} —á–∞—Å–æ–≤\n"
            f"–ü–µ—Å—Å–∏–º–∏—Å—Ç–∏—á–Ω—ã–π –ø—Ä–æ–≥–Ω–æ–∑: {forecast['max_hours']} —á–∞—Å–æ–≤\n\n"
            f"–û–∂–∏–¥–∞–µ–º–æ–µ –≤—Ä–µ–º—è –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –æ—á–µ—Ä–µ–¥–∏: <b>{date_str}</b>\n"
            f"(–ø—Ä–∏ —Å—Ä–µ–¥–Ω–µ–π —Å–∫–æ—Ä–æ—Å—Ç–∏ {forecast['speed']} –ø–æ–∑–∏—Ü–∏–π/—á–∞—Å)"
        )
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã forecast: {e}")
        await message.answer("–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –ø—Ä–æ–≥–Ω–æ–∑.")


async def open_chat_callback(callback: CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∏ '–ê–Ω–æ–Ω–∏–º–Ω—ã–π —á–∞—Ç'."""
    await callback.answer()
    
    # –ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–µ–π
    await callback.message.edit_text(
        "üí¨ <b>–ê–Ω–æ–Ω–∏–º–Ω—ã–π —á–∞—Ç –≤–æ–¥–∏—Ç–µ–ª–µ–π</b>\n\n"
        "–ß—Ç–æ–±—ã –≤–æ–π—Ç–∏ –≤ —á–∞—Ç, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É /chat\n\n"
        "–í —á–∞—Ç–µ –≤—ã —Å–º–æ–∂–µ—Ç–µ –æ–±—â–∞—Ç—å—Å—è —Å –¥—Ä—É–≥–∏–º–∏ –≤–æ–¥–∏—Ç–µ–ª—è–º–∏ –∞–Ω–æ–Ω–∏–º–Ω–æ. "
        "–î—Ä—É–≥–∏–µ —É—á–∞—Å—Ç–Ω–∏–∫–∏ –±—É–¥—É—Ç –≤–∏–¥–µ—Ç—å —Ç–æ–ª—å–∫–æ –≤–∞—à –ø—Å–µ–≤–¥–æ–Ω–∏–º –∏ –ø–æ–∑–∏—Ü–∏—é –≤ –æ—á–µ—Ä–µ–¥–∏.",
        reply_markup=get_main_menu()
    )


def get_command_router() -> Router:
    """–°–æ–∑–¥–∞–Ω–∏–µ —Ä–æ—É—Ç–µ—Ä–∞ –¥–ª—è –∫–æ–º–∞–Ω–¥."""
    router = Router()
    
    router.message.register(cmd_help, Command("help"))
    router.callback_query.register(help_callback, F.data == "help")
    router.message.register(cmd_stats, Command("stats"))
    router.message.register(cmd_forecast, Command("forecast"))
    router.callback_query.register(open_chat_callback, F.data == "open_chat")
    
    return router 